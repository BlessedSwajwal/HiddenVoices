@page "/confessions"
@using HiddenVoicesBlazor.API.Interface
@using HiddenVoicesBlazor.Data
@inject IConfessionAPIService _confessionAPIService

<div class="d-flex flex-column justify-content-between align-items-center text-white">
<h3>Confessions</h3>
<NavLink href="/confess"> <button type="button" class="btn btn-primary rounded-pill px-5 py-3">Confess</button></NavLink>
</div>
<div class="row gx-4 gx-lg-5 justify-content-center">
    <div >
        <div class="p-3">
            @if (Confessions != null)
            {
                @foreach (var confession in Confessions)
                {
                    <div class="card mb-3 shadow-sm" style="background-color: #E2DFD0">
                        <div class="card-body">
                            <NavLink href=@($"/confession-detail?confessionId={confession.id}")><h5 class="card-title text-center">@confession.title</h5></NavLink>
                            <p class="text-justify">@confession.message</p>

                            <div class="card-text mt-3 d-flex gap-5">
                                <div>
                                    @confession.upvotes <i class="bi bi-hand-thumbs-up-fill"></i>
                                </div>
                                <div>  @confession.downvotes <i class="bi bi-hand-thumbs-down-fill"></i></div>
                                <div>@confession.createdAt.ToString("MMMM dd, yyyy") <i class="bi bi-calendar-date-fill"></i></div>
                                <div>7 <i class="bi bi-chat"></i></div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No confessions found.</p>
            }
        </div>
       
    </div>
</div>

@code {
    private List<ConfessionResponse> Confessions { get; set; } = new List<ConfessionResponse>();

    [Parameter]
    [SupplyParameterFromQuery(Name = "offset")]
    public int Offset { get; set; } = 0;

    [Parameter]
    [SupplyParameterFromQuery(Name = "count")]
    public int Count { get; set; } = 10;

    protected override async Task OnInitializedAsync()
    {
        var res = await _confessionAPIService.GetConfessionResponses(Offset, Count);
        Confessions = res;
    }
}
