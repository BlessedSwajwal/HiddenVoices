@page "/credentials"
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<h2 class="text-center text-warning p-3">Warning: DO NOT SHARE THE SECRET KEY TO ANYONE!!!!!!</h2>

<h4 class="text-danger">Save these data to regain "write" access to the confession.</h4>
<p class="text-danger ">If you lose these details, you may not be able to reply or delete this confession post!</p>

@if (!string.IsNullOrEmpty(SecretKey))
{
    <div class="card p-5 bg-danger-subtle">
    <h4 class="font-monospace">Confession Id: @ConfessionId</h4>
    <h4 class="font-monospace">Secret Key: @SecretKey</h4>
    </div>

    <NavLink href="@($"/confession-detail?confessionId={ConfessionId}")"><button class="btn btn-primary">Go to confession</button></NavLink>
} else
{
    <h4>Loading...</h4>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "confessionId")]
    public string ConfessionId { get; set; }

    string? SecretKey;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var res = await JsRuntime.InvokeAsync<string>("ReadCookie.ReadCookie", ConfessionId);
        if(string.IsNullOrEmpty(res))
        {
            //TODO: Graceful exception handling
            throw new Exception("No cookies set.");
        }
        SecretKey = res;
        StateHasChanged();
    }
}
