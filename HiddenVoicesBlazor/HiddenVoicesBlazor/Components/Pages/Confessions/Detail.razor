@page "/confession-detail"
@using HiddenVoicesBlazor.API.Interface
@using HiddenVoicesBlazor.Data
@using System.Globalization
@rendermode InteractiveServer
@inject IConfessionAPIService ConfessionAPIService
@inject NavigationManager NavigationManager


@if(ConfessionData is not null)
{

<div class="confession-card card mb-3 shadow">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">@ConfessionData.title</h5>
        <div class="vote-count d-flex gap-2 align-items-center">
            <div>
                <i class="bi bi-hand-thumbs-up-fill"></i>
                @* <span>@ConfessionData.upvotes</span> *@
                <span>1023</span>
            </div>
            <div>
                <i class="bi bi-hand-thumbs-down-fill"></i>
                @* <span>@ConfessionData.downvotes</span> *@
                    <span>423</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <p class="card-text">@ConfessionData.message</p>
        <div class="card-footer text-muted">
            <small>Created: @ConfessionData.createdAt.ToString("MMMM d, yyyy h:mm tt", CultureInfo.InvariantCulture)</small>
            <small class="float-end">Modified: @ConfessionData.modifiedAt.ToString("MMMM d, yyyy h:mm tt", CultureInfo.InvariantCulture)</small>
        </div>
    </div>
</div>

    <div class="row d-flex justify-content-center">
        <div >
            <div class="card shadow-0 border" style="background-color: #f0f2f5;">
                <div class="card-body p-4">
                    <form method="post" @onsubmit="AddRootComment" @formname="CreateRootComment">
                        <AntiforgeryToken />
                    <div data-mdb-input-init class="form-outline mb-1">
                       <InputTextArea class="p-2" style="height: 100px; width: 100%" @bind-Value="CommentText" placeholder="Type comment..." />
                    </div>
                        <button type="submit" class="btn btn-primary btn-lg">Comment</button>
                    </form>
                    <div class="mt-3">
                    @foreach(var comment in ConfessionData.replies)
                    {
                        <div class="card mb-4">
                            <div class="card-body">
                                <p>@comment.message</p>

                                <div class="d-flex justify-content-between">
                                    <div class="d-flex flex-row align-items-center">
                                        <img src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp" alt="avatar" width="25"
                                             height="25" />
                                        <p class="small mb-0 ms-2">Anonymous</p>
                                    </div>
                                    <div class="d-flex flex-row align-items-center">
                                        <p class="small text-muted mb-0">Upvote?</p>
                                        <i class="far fa-thumbs-up mx-2 fa-xs text-body" style="margin-top: -0.16rem;"></i>
                                        <p class="small text-muted mb-0">3</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    </div>
                </div>
            </div>
        </div>
    </div>
} else
{
    <h3>Error while displaying data.</h3>
}

<style scoped>
    .confession-card {
        border-radius: 1rem;
        background-color: #f8f9fa;
    }

    .vote-count {
        font-size: 1.2rem;
    }

    .material-icons {
        font-size: 1.5rem;
        vertical-align: middle;
    }

    .card-text {
        font-size: 1rem;
    }

    .card-footer small {
        font-size: 0.8rem;
    }
</style>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "confessionId")]
    public Guid ConfessionId { get; set; }

    ConfessionResponse? ConfessionData;

    [SupplyParameterFromForm]
    string? CommentText { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var response = await ConfessionAPIService.GetConfessionDetail(ConfessionId);
        ConfessionData = response;
    }

    async Task AddRootComment()
    {
        var response = await ConfessionAPIService.AddComment(ConfessionId, CommentText, null);
        NavigationManager.NavigateTo($"/confession-detail?confessionId={ConfessionId}", true);
    }
}
